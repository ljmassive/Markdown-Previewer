{"version":3,"sources":["ToolBar.js","App.js","index.js"],"names":["ToolBar","id","onClick","this","props","boldify","title","className","icon","faBold","italify","faItalic","headingify","faHeading","quotify","faQuoteRight","olify","faListOl","ulify","faListUl","codify","faCode","linkify","faLink","imgify","faImage","React","Component","App","state","input","initalText","handleChange","bind","event","setState","target","value","text","onChange","Editor","editorField","document","getElementById","startPosition","selectionStart","endPosition","selectionEnd","selectedText","substring","insert","length","focus","setSelectionRange","Previewer","createMarkup","e","marked","Renderer","html","__html","dangerouslySetInnerHTML","setOptions","breaks","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d166f0e.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBold,\n  faItalic,\n  faListOl,\n  faListUl,\n  faLink,\n  faImage,\n  faHeading,\n  faQuoteRight,\n  faCode\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass ToolBar extends React.Component {\n  render() {\n    return (\n      <div id=\"tool-bar\">\n        <FontAwesomeIcon\n          onClick={this.props.boldify}\n          title=\"Insert Bold text\"\n          className=\"icon\"\n          icon={faBold}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.italify}\n          title=\"Insert Italic text\"\n          className=\"icon\"\n          icon={faItalic}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.headingify}\n          title=\"Insert Heading\"\n          className=\"icon\"\n          icon={faHeading}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.quotify}\n          title=\"Insert Block Quote\"\n          className=\"icon\"\n          icon={faQuoteRight}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.olify}\n          title=\"Insert Ordered List item\"\n          className=\"icon\"\n          icon={faListOl}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.ulify}\n          title=\"Insert Unordered List item\"\n          className=\"icon\"\n          icon={faListUl}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.codify}\n          title=\"Insert Inline Code\"\n          className=\"icon\"\n          icon={faCode}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.linkify}\n          title=\"Insert Link\"\n          className=\"icon\"\n          icon={faLink}\n        />\n        <FontAwesomeIcon\n          onClick={this.props.imgify}\n          title=\"Insert Image\"\n          className=\"icon\"\n          icon={faImage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ToolBar;\n","import React from \"react\";\nimport marked from \"marked\";\nimport ToolBar from \"./ToolBar.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: initalText\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Previewer text={this.state.input} />\n        <Editor text={this.state.input} onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.boldify = this.boldify.bind(this);\n    this.italify = this.italify.bind(this);\n    this.headingify = this.headingify.bind(this);\n    this.quotify = this.quotify.bind(this);\n    this.olify = this.olify.bind(this);\n    this.ulify = this.ulify.bind(this);\n    this.codify = this.codify.bind(this);\n    this.linkify = this.linkify.bind(this);\n    this.imgify = this.imgify.bind(this);\n  }\n\n  boldify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"<bold text>\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \"**\" +\n      insert +\n      \"**\" +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 2,\n      startPosition + 2 + insert.length\n    );\n  }\n  italify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"<italic text>\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \"_\" +\n      insert +\n      \"_\" +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 1,\n      startPosition + 1 + insert.length\n    );\n  }\n  headingify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    if (\n      editorField.value.substring(startPosition - 7, startPosition) ===\n      \"###### \"\n    ) {\n      editorField.value =\n        editorField.value.substring(0, startPosition - 7) +\n        selectedText +\n        editorField.value.substring(endPosition, editorField.value.length);\n      editorField.focus();\n      editorField.setSelectionRange(\n        startPosition - 7,\n        startPosition - 7 + selectedText.length\n      );\n    } else if (\n      editorField.value.substring(startPosition - 2, startPosition) === \"# \"\n    ) {\n      editorField.value =\n        editorField.value.substring(0, startPosition - 1) +\n        \"# \" +\n        selectedText +\n        editorField.value.substring(endPosition, editorField.value.length);\n      editorField.focus();\n      editorField.setSelectionRange(\n        startPosition + 1,\n        startPosition + 1 + selectedText.length\n      );\n    } else {\n      editorField.value =\n        editorField.value.substring(0, startPosition) +\n        \"\\n# \" +\n        selectedText +\n        editorField.value.substring(endPosition, editorField.value.length);\n      editorField.focus();\n      editorField.setSelectionRange(\n        startPosition + 3,\n        startPosition + 3 + selectedText.length\n      );\n    }\n  }\n  quotify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \" \\n > \" +\n      insert +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 5,\n      startPosition + 5 + insert.length\n    );\n  }\n  olify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \" \\n1. \" +\n      insert +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 5,\n      startPosition + 5 + insert.length\n    );\n  }\n  ulify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \" \\n - \" +\n      insert +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 5,\n      startPosition + 5 + insert.length\n    );\n  }\n  codify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"<inline code>\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \"`\" +\n      insert +\n      \"`\" +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 1,\n      startPosition + 1 + insert.length\n    );\n  }\n  linkify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"link text\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \"[\" +\n      insert +\n      \"](https://)\" +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 1,\n      startPosition + 1 + insert.length\n    );\n  }\n  imgify() {\n    const editorField = document.getElementById(\"editor\");\n    let startPosition = editorField.selectionStart;\n    let endPosition = editorField.selectionEnd;\n    let selectedText = editorField.value.substring(startPosition, endPosition);\n    let insert = \"\";\n    selectedText ? (insert = selectedText) : (insert = \"image description\");\n    editorField.value =\n      editorField.value.substring(0, startPosition) +\n      \"![\" +\n      insert +\n      \"](https://)\" +\n      editorField.value.substring(endPosition, editorField.value.length);\n    editorField.focus();\n    editorField.setSelectionRange(\n      startPosition + 2,\n      startPosition + 2 + insert.length\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"editor-box\" className=\"well\">\n        <ToolBar\n          onClick={this.props.onChange}\n          text={this.props.text}\n          boldify={this.boldify}\n          italify={this.italify}\n          headingify={this.headingify}\n          quotify={this.quotify}\n          olify={this.olify}\n          ulify={this.ulify}\n          codify={this.codify}\n          linkify={this.linkify}\n          imgify={this.imgify}\n        />\n        <textarea\n          id=\"editor\"\n          text={this.props.text}\n          value={this.props.text}\n          onChange={this.props.onChange}\n        />\n        <p className=\"byLine\">by Lucy Massie, 2021.</p>\n      </div>\n    );\n  }\n}\n\nclass Previewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createMarkup = this.createMarkup.bind(this);\n  }\n  createMarkup(e) {\n    return marked(e, marked.Renderer());\n  }\n\n  render() {\n    const html = { __html: this.createMarkup(this.props.text) };\n    return <div id=\"preview\" dangerouslySetInnerHTML={html} />;\n  }\n}\n\nmarked.setOptions({\n  breaks: true\n});\nconst initalText =\n  \"# Hello there! \\n\\n## Welcome to my Markdown Previewer :) \\nAll you need to do is write/change the Markdown code in the editor below and it will render here automatically! Have a look around and make yourself at home. \\n\\n You can write multi-line code like so:\\n ```\\n  const sum = (a, b) => {\\n    return a + b; \\n  }; \\n``` \\nOrdered lists are easy as: \\n1. One, \\n2. Two,\\n3. Three!\\n\\n\\n> This is a block quote.\\n\\n\\nYou can easily add:\\n- your favourite [links](https://www.youtube.com/watch?v=o1eHKf-dMwo), (try clicking it!) \\n- snippets of `inline code`, \\n- even **images**!\\n\\n\\n![Doge](https://i.pinimg.com/564x/c8/55/ae/c855aea64c62ef90a746df8d1670b017.jpg)\";\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"App\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}